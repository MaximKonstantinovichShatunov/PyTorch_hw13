import telebot
from telebot import types
from getdata import token
import webbrowser
import telebot
import settings
from IOData import save_users_to_json, add_user_to_json
import datetime


bot = telebot.TeleBot(token)
admin_id = 653372350
zakaz_id = 655465
game_static = {}
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton("–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Åüîß")
    btn2 = types.KeyboardButton("–ó–∞–ø—á–∞—Å—Ç–∏ ‚öôÔ∏è")
    btn3 = types.KeyboardButton(f"–ö—É–∑–æ–≤–Ω–æ–π \n –†–µ–º–æ–Ω—Ç\n üöó")
    btn4 = types.KeyboardButton("–ê–∫—Ü–∏–∏\n üí•")
    btn5 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç\n üåê")
    btn6 = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã\n‚òéÔ∏è")
    markup.row(btn1, btn2,btn3)
    
    markup.row(btn4,btn5,btn6)
    # file = open('./TAHO.jpg','rb')
    # bot.send_photo(message.chat.id,reply_markup=markup)
    bot.send_message(message.chat.id, f'–î–æ–±—Ä—ã–π –¥–µ–Ω—å, {message.from_user.first_name}', reply_markup=markup)
    bot.register_next_step_handler(message, menu_button)

def menu_button(message):
        message.text == "–ê–≤—Ç–æ—Å–µ—Ä–≤–∏—Åüîß"
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton("–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞")
        btn2 = types.KeyboardButton("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
        btn3 = types.KeyboardButton("–¢–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")
        btn4 = types.KeyboardButton("–ü–æ–¥–≤–µ—Å–∫–∞")
        btn5 = types.KeyboardButton("–î–≤–∏–≥–∞—Ç–µ–ª—å")
        btn6 = types.KeyboardButton("–¢–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        btn7 = types.KeyboardButton("–¢—Ä–∞—Å–º–∏—Å—Å–∏—è")
        btn8 = types.KeyboardButton("–≠–ª–µ–∫—Ç—Ä–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
        btn9 = types.KeyboardButton("–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä")
        btn10 = types.KeyboardButton("–†—É–ª–µ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
        btn11 = types.KeyboardButton("–í—ã—Ö–ª–æ–ø–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        btn12 = types.KeyboardButton("–î–æ–ø–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ")
        markup.row(btn1, btn2,btn3)
        markup.row(btn4,btn5,btn6)
        markup.row(btn7,btn8, btn9)
        markup.row(btn10,btn11, btn12)
        bot.send_message(message.chat.id,f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É',reply_markup=markup)
        bot.register_next_step_handler(message, autoservis_button)
            

"""elif message.text == "–ó–∞–ø—á–∞—Å—Ç–∏ ‚öôÔ∏è":
        bot.send_message(message.chat.id, '–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä')
    elif message.text == "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç\n üåê":
        webbrowser.open('https://vostok-auto.ru/')
    elif message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã‚òéÔ∏è":
        bot.send_message(message.chat.id, '–°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä')
    
        bot.register_next_step_handler(message, autoservis_button)"""

def autoservis_button(message):
    if message.text == "–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞":
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton("–í –î–≤–∏–≥–∞—Ç–µ–ª–µ")
        btn2 = types.KeyboardButton("–í –ê–ö–ü–ü")
        markup.add(btn1,btn2)
        bot.send_message(message.chat.id,f'–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É',reply_markup=markup)
        bot.register_next_step_handler(message,Oil_In_Engine)
        

def Oil_In_Engine(message):
    if message.text == "–í –î–≤–∏–≥–∞—Ç–µ–ª–µ":
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É")
        usluga = 'changing engine oil'
        markup.add(btn1)
        bot.send_message(message.chat.id,'<b>–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ</b> <em>500 ‚ÇΩ</em>\n\n<b>–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ –≤ –¥–≤–∏–≥–∞—Ç–µ–ª–µ</b><em> 750 ‚ÇΩ</em>\n<em>–µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç —Å–≤–æ—ë –º–∞—Å–ª–æ</em>', parse_mode='html', reply_markup=markup)
        bot.register_next_step_handler(message,save_number1,usluga)

def save_number1(message,usluga):
    
    bot.send_message(message.chat.id,'–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä–æ—Å–∏–º '
                                                        '–≤–≤–µ—Å—Ç–∏ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä (—Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã).')
    bot.register_next_step_handler(message,save_number,usluga)

    
def save_number(message,usluga):
        number = message.text
        
        if len(str(number)) >= 10 and ('+' in (str(number)) or '7' in (str(number)) or '8' in (str(number))): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ù–æ–º–µ—Ä–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ù–∞–ø–∏—Å–∞–Ω–∏—è
            zayavka_done(bot=bot, message=message, number=number,usluga=usluga)
        else:
            bot.send_message(message.chat.id, '—É–∫–∞–∑–∞–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä.')
            kb4 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            but1 = types.KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
            kb4.add(but1)
            mes_num = bot.edit_message_reply_markup(message.chat.id, '–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø—Ä–æ—Å–∏–º '
                                                        '–≤–≤–µ—Å—Ç–∏ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä (—Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã).',
                                    reply_markup=kb4)
            bot.register_next_step_handler(mes_num, save_number1(message,usluga))

def zayavka_done(bot, message, number,usluga):
    try:
        bot.send_message(message.chat.id,
                         f'–í–∞—à–µ–º—É –∑–∞–∫–∞–∑—É –ø—Ä–∏—Å–≤–æ–µ–Ω –Ω–æ–º–µ—Ä {zakaz_id}. –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É.\n'
                         f'–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞.')
        
        bot.send_message(admin_id, f'üö®!!!–í–ù–ò–ú–ê–ù–ò–ï!!!üö®\n'                                    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –ê–¥–º–∏–Ω—É
                                   f'–ü–æ—Å—Ç—É–ø–∏–ª–∞ –ó–ê–Ø–í–ö–ê –æ—Ç:\n'
                                   f'id —á–∞—Ç–∞: {message.chat.id}\n'
                                   f'–ò–º—è: {message.chat.first_name}\n'
                                   f'–§–∞–º–∏–ª–∏—è: {message.chat.last_name}\n'
                                   f'‚Ññ —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {number}\n'
                                   f'–°—Å—ã–ª–∫–∞: {usluga}\n')
        bot.send_message(admin_id, '–ó–∞—è–≤–∫–∞ –≤–Ω–µ—Å–µ–Ω–∞ –≤ –±–∞–∑—É ‚úÖ\n'
                                   '—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–∑—É: https://docs.google.com/spreadsheets/d/'
                                   '14P5j3t4Z9kmy4o87WEbLqeTwsKi7YZAx7RiQPlY2c1w/edit?usp=sharing')
        
        save_users_to_json( {'user_ID': message.chat.id, 'telephone': number,
                            'Firstname': message.chat.first_name, 'usluga' : usluga,
                            'time' : datetime.datetime.today().strftime("%d-%b-%Y (%H:%M)")}, 'zayavka.json')
        print(number)
    except Exception:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É.')
        

# –î–∞–ª—å—à–µ –®–ª—è–ø–∞

@bot.message_handler(content_types=['photo'])
def get_photo(message):
    markup = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url = 'https://vostok-auto.ru/')
    btn2 = types.InlineKeyboardButton("—É–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ", callback_data='delete')
    btn3 = types.InlineKeyboardButton("–∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data='edit')
    markup.row(btn1)
    markup.row(btn2,btn3)

    bot.reply_to(message, '–ö–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æ!',reply_markup = markup)

@bot.message_handler(commands=['start', 'main' , 'hello'])
def main(message):
    bot.send_message(message.chat.id, f'–ü–†–ò–í–ï–¢, {message.from_user.first_name}')

@bot.message_handler(commands=['help'])
def main(message):
    bot.send_message(message.chat.id, '<b>help</b> <em>information</em>', parse_mode='html')

@bot.callback_query_handler(func=lambda callback: True)
def collback_message(callback):
    if callback.data == 'delete':
        bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
    elif callback.data == 'edit':
        bot. edit_message_text('Edit text', callback.message.chat.id, callback.message.message_id)
@bot.message_handler()
def info(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
       bot.send_message(message.chat.id, f'–ü–†–ò–í–ï–¢, {message.from_user.first_name}')
    elif message.text.lower() == 'id':
        bot.reply_to(message, f'ID: {message.from_user.id}')

def summa(message):
    global amount
    try:
        amount = int(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, f'–Ω–µ –≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')
        bot.register_next_step_handler(message, summa)
        return # —á—Ç–æ –±—ã —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è

bot.polling(none_stop=True)